Install Tarantool 1.9
=====================
https://www.tarantool.io/en/download/os-installation/1.9/ubuntu/

release=`lsb_release -c -s`

apt-get -y install gnupg2
apt-get -y install curl
apt-get -y install lsb-release
sudo apt-get -y install apt-transport-https

curl http://download.tarantool.org/tarantool/1.9/gpgkey | sudo apt-key add -

# Add Tarantool repositories
sudo rm -f /etc/apt/sources.list.d/*tarantool*.list
echo "deb http://download.tarantool.org/tarantool/1.9/ubuntu/ ${release} main" | sudo tee /etc/apt/sources.list.d/tarantool_1_9.list
echo "deb-src http://download.tarantool.org/tarantool/1.9/ubuntu/ ${release} main" | sudo tee -a /etc/apt/sources.list.d/tarantool_1_9.list

# install tarantool
sudo apt-get -y update
sudo apt-get -y install tarantool





Install tarantool modules
=========================

sudo apt-get install luarocks


utf8

sudo luarocks install luautf8



luasoap

sudo apt-get install lua-sec
sudo apt-get install expat
sudo apt-get install libexpat1-dev

sudo luarocks install luaexpat
sudo luarocks install luasoap




Create directory structure
==========================

sudo mkdir /dewt
cd /dewt
sudo mkdir app
sudo mkdir data
sudo mkdir emails
sudo mkdir feedback
sudo mkdir journal
sudo mkdir logs
sudo mkdir ssl
sudo mkdir static
sudo mkdir tmp
sudo mkdir content
sudo mkdir read

Create an empty external_creds module
echo "return {}" > app/external_creds.lua

Let the tarantool user own the folders
sudo chown -R tarantool *

Install tarantool-http
======================
https://github.com/tarantool/http#installation

In /dewt/app
tarantoolctl rocks install http

Install MySQL connector for tarantool (if db is MySQL)
======================================================
https://github.com/tarantool/mysql

git clone https://github.com/tarantool/mysql.git tarantool-mysql
cd tarantool-mysql && cmake . -DCMAKE_BUILD_TYPE=RelWithDebInfo
make
make install


Make a release zip
==================

Pre-requisites:
- Java 1.8
- Tcl 8.6

Run the "build" script in the root folder of the repository
./build

The script will create a zip file in /tmp
For example:
/tmp/201811110836.zip


Install the release zip
=======================

Copy the release zip to the server.
Copy the scripts/deploy script to the server

sudo ./deploy 201811110836.zip


Create an instance
==================

Copy the configuration file
sudo cp /dewt/app/onprem.lua /etc/tarantool/instances.available/

Stop the example instance 
sudo tarantoolctl stop example
sudo rm /etc/tarantool/instances.enabled/example.lua

Enable the instance
cd /etc/tarantool/instances.enabled
sudo ln -s ../instances.available/onprem.lua

Start the dew instance
sudo tarantoolctl start onprem

Check status
sudo tarantoolctl status onprem

The logs are in /dewt/logs

Administrator user:
admin
drakon



Close port 3301, 8090, 7650
========================



sudo iptables -A INPUT -i lo -p tcp --dport 8090 -j ACCEPT
sudo iptables -A INPUT -i lo -p tcp --dport 8092 -j ACCEPT
sudo iptables -A INPUT -i lo -p tcp --dport 3301 -j ACCEPT
sudo iptables -A INPUT -i lo -p tcp --dport 3302 -j ACCEPT
sudo iptables -A INPUT -i lo -p tcp --dport 7650 -j ACCEPT

sudo iptables -A INPUT -p tcp --dport 8090 -j DROP
sudo iptables -A INPUT -p tcp --dport 8092 -j DROP
sudo iptables -A INPUT -p tcp --dport 3301 -j DROP
sudo iptables -A INPUT -p tcp --dport 3302 -j DROP
sudo iptables -A INPUT -p tcp --dport 7650 -j DROP


Save iptables
https://www.thomas-krenn.com/en/wiki/Saving_Iptables_Firewall_Rules_Permanently
sudo apt-get install iptables-persistent
#sudo iptables-save > /etc/iptables/rules.v4

check:
sudo iptables --list


